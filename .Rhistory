cnames<- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<- cnames
my_data
swirl()
install.packages("gifski")
install.packages("gapminder")
library(gganimate)
library(gifski)
library("gapminder")
install.packages("installr")
install.packages("rtools")
library(installr)
updateR()
library(haven)
detach("package:haven", unload = TRUE)
library(haven)
library(haven)
library(haven)
Enaho01_2019_601 <- read_sav("C:/Users/victo/Desktop/687-Modulo07/Enaho01-2019-601.sav")
swirl()
swirl
swirl:
library(swirl)
swirl()
library("swirl")
swirl()
5+7
x <- 5+7
x
x-3
y <- x-3
y
c (1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c (z, 555, z)
z*2+100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z * 2 + 1000)
(z * 2 + 100)
(z* 2 +100)
z*2+1000
my_div
library(installr)
clear
install.packages("installr")
install.packages("installr")
library(installr)
updateR()
UpdateR()
updateR()
2+4*5-exp(3)
#Primeros pasos en R
#ejercicio 1
2+4*5-exp(3)
Log(5)+pi/Sqrt(12)
log(5)+pi/Sqrt(12)
log(5)+pi/sqrt(12)
mean(10,11,12,13,14,15,16,17,18,19,20)
x<-(10,11,12,13,14,15,16,17,18,19,20)
mean(x)
x <-(10,11,12,13,14,15,16,17,18,19,20)
mean(x)
x<-c(10,11,12,13,14,15,16,17,18,19,20)
mean(x)
ls() #muestra los objetos
#Primeros pasos en R
#Ejercicio 1
# A
2+4*5-exp(3)
# B
log(5)+pi/sqrt(12)
#Ejercicio 2
x<-c(10,11,12,13,14,15,16,17,18,19,20)
mean(x)
ls() #muestra los objetos
#Escalar un solo valor
a=1
b=2
#Escalar un solo valor
a=1
#Primeros pasos en R
#Ejercicio 1
# A
2+4*5-exp(3)
# B
log(5)+pi/sqrt(12)
#Ejercicio 2
x<-c(10,11,12,13,14,15,16,17,18,19,20)
mean(x)
ls() #muestra los objetos
#Objetos
#Escalar un solo valor
a=1
b=2
ls() #muestra los objetos
# Ecuación cuadrática
r1= -b+sqrt(b)
a=1
b=-5
c=6
r1= (-b+sqrt(b^2-4*a*c))/2*a
r2=(-b-sqrt(b^2-4*a*c))/2*a
a=2
b=5
c=6
r1= (-b+sqrt(b^2-4*a*c))/2*a
r2=(-b-sqrt(b^2-4*a*c))/2*a
r1= (-b+sqrt(b^2-4*a*c))/2*a
a=2
b=5
c=6
r3= (-b+sqrt(b^2-4*a*c))/2*a
r4=(-b-sqrt(b^2-4*a*c))/2*a
a=1
b=-5
c=6
r1= (-b+sqrt(b^2-4*a*c))/2*a
r2=(-b-sqrt(b^2-4*a*c))/2*a
a=2
b=5
c=6
r3= (-b+sqrt(b^2-4*a*c))/2*a
r=(-b-sqrt(b^2-4*a*c))/2*a
a=2
b=5
c=6
r3= (-b+sqrt(b^2-4*a*c))/2*a
r4=(-b-sqrt(b^2-4*a*c))/2*a
install.packages("shiny")
library(shiny)
library(ggplot2)
shinyApp(ui=ui, server=server)
shinyApp(ui=ui, server=server)
shinyServer(function(input,output){output$histograma=renderPlot({ bins=input$bins,    ggplot(faithful, aes(x=waiting)+              geom_histogram(bins=bins)+ labs(x='tiempo de espera en minutos',                   title='Histograma de tiempo de espera hasta la siguiente Erupción')+ theme_minimal()  })})
install.packages("palmerpenguins")
library(readxl)
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "numeric"))
View(historical_database)
library(tidyverse)
filter(historical_database,product=='Others')
others=(filter(historical_database,product=='Others'))
str(historical_database)
a=group_by(historical_database,product)
View(summarise(a,n()))
summary(df)
summary(df)
summary(df)
summary(df)
summary(df)
library(readxl)
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "numeric"))
View(historical_database)
library(tidyverse)
filter(historical_database,product=='Others')
others=(filter(historical_database,product=='Others'))
str(historical_database)
a=group_by(historical_database,product)
View(summarise(a,n()))
b=group_by(historical_database,city_code)
View(summarise(b,n()))
c=group_by(historical_database,product_type)
View(summarise(c,n()))
historical_database %>% filter(as.factor(year)==1974:2015) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na,rm=T))
istorical_database %>% filter(as.factor(year)==1974:2015) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(as.factor(year)==1974:2015) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(as.factor(year)) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(yea) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(year) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(product) %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(product=='Açaí') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
historical_database %>% filter(product=='Beans') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_acai=historical_database %>% filter(product=='Açaí') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_beans=historical_database %>% filter(product=='Beans') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cassava=
mean_cassava=historical_database %>% filter(product=='Cassava') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cocoa=historical_database %>% filter(product=='Cocoa') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cocoa=historical_database %>% filter(product=='Cocoa') %>%
group_by(product_type,year) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cocoa=historical_database %>% filter(product=='Cocoa') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
View(mean_cocoa)
mean_corn=historical_database %>% filter(product=='Corn') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_livestock=historical_database %>% filter(product=='Livestock') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_others=historical_database %>% filter(product=='Others') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
View(others)
View(mean_others)
mean_palm_oil=historical_database %>% filter(product=='Palm oil') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_rice=historical_database %>% filter(product=='Rice') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_sorghum=historical_database %>% filter(product=='Sorghum') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_soy=historical_database %>% filter(product=='Soy') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
library(mice)
library(mice)
imputed_data = mice::mice(historical_database,
m = 1,
maxit = 1,
method = "pmm",
seed = 2021,
print=F)
complete.data = mice::complete(imputed_data)
?mice
imputed_data = mice::mice(historical_database,
m = 11,
maxit = 5,
method = "pmm",
seed = NA,
print=F)
complete.data = mice::complete(imputed_data)
?mice
imputed_data = mice::mice(historical_database,
m = 11,
maxit = 5,
method = "pmm",
seed = NA,
print=F)
imputed_data = mice::mice(historical_database,
m = 5,
maxit = 5,
method = "pmm",
seed = NA,
print=F)
historical_database %>% year(year)
library(lubridate)
library(tidyverse)
library(lubridate)
historical_database %>% year(year)
year(historical_database$year)
historical_database$year=year(historical_database$year)
as.factor(historical_database$year)
historical_database$year=as.factor(historical_database$year)
library(readxl)
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "numeric"))
View(historical_database)
library(tidyverse)
library(lubridate)
historical_database$year=year(historical_database$year)
historical_database$year=as.factor(historical_database$year)
filter(historical_database,product=='Others')
others=(filter(historical_database,product=='Others'))
str(historical_database)
a=group_by(historical_database,product)
View(summarise(a,n()))
b=group_by(historical_database,city_code)
View(summarise(b,n()))
c=group_by(historical_database,product_type)
View(summarise(c,n()))
mean_acai=historical_database %>% filter(product=='Açaí') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_beans=historical_database %>% filter(product=='Beans') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cassava=historical_database %>% filter(product=='Cassava') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_cocoa=historical_database %>% filter(product=='Cocoa') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_corn=historical_database %>% filter(product=='Corn') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_livestock=historical_database %>% filter(product=='Livestock') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_others=historical_database %>% filter(product=='Others') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_palm_oil=historical_database %>% filter(product=='Palm oil') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_rice=historical_database %>% filter(product=='Rice') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_sorghum=historical_database %>% filter(product=='Sorghum') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
mean_soy=historical_database %>% filter(product=='Soy') %>%
group_by(product_type) %>%
summarise(mean(destinated_area, na.rm=T))
?group_by
ymean_acai=historical_database %>% filter(product=='Açaí') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_beans=historical_database %>% filter(product=='Beans') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_cassava=historical_database %>% filter(product=='Cassava') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_cocoa=historical_database %>% filter(product=='Cocoa') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_corn=historical_database %>% filter(product=='Corn') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_livestock=historical_database %>% filter(product=='Livestock') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_others=historical_database %>% filter(product=='Others') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_palm_oil=historical_database %>% filter(product=='Palm oil') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_rice=historical_database %>% filter(product=='Rice') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_sorghum=historical_database %>% filter(product=='Sorghum') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
ymean_soy=historical_database %>% filter(product=='Soy') %>%
group_by(year) %>%
summarise(mean(destinated_area, na.rm=T))
View(ymean_acai)
View(ymean_corn)
View(ymean_rice)
View(ymean_acai)
View(historical_database)
View(ymean_sorghum)
View(ymean_rice)
View(ymean_others)
View(ymean_sorghum)
View(ymean_soy)
View(ymean_livestock)
View(ymean_corn)
View(ymean_beans)
View(ymean_beans)
View(ymean_beans)
View(historical_database)
#Open packages
library(readxl)
library(tidyverse)
library(lubridate)
# Open data set
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "numeric"))
View(historical_database)
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "double"))
View(historical_database)
# Open data set
historical_database <- read_excel("~/DESAFIO BAIN/historical-database 3.xlsx",
col_types = c("date", "text", "text",
"text", "numeric"))
a=group_by(historical_database,product)
n_product=View(summarise(a,n()))
b=group_by(historical_database,city_code)
n_city_code=View(summarise(b,n()))
b=group_by(historical_database,city_code)
n_city_code=data.frame(summarise(b,n()))
View(n_city_code)
c=group_by(historical_database,product_type)
n_product_type=data.frame(summarise(c,n()))
a=group_by(historical_database,product)
n_product=data,frame(summarise(a,n()))
a=group_by(historical_database,product)
n_product=data.frame(summarise(a,n()))
View(n_product)
AirPassengers
data<- AirPassengers
ts.plor(data)
ts.plot(data)
bw(data)
brw(data)
brw("data")
vw(data)
view(data)
ts.plot(data, gpars = list(xlab="Año"))
install.packages("knitr")
library(knitr)
######################################################
### LABORATORIO 1 ##################################
### Basic data types ########
#========= Character ===========================
print("Hola mundo")
print("7.5")
print("TRUE")
#======== Numeric =============================
print(5)
#======= Logical ===============================
print(TRUE)
print(FALSE)
print(T)
print(F)
#**************************************************
######### VARIABLES ##############################
#============ Nombres de las variables =========
myvar<- "John"
#======= Ejemplo ===============================
x<- 2
## comentarios
x <- "Today is " # assigns character to variable x
print(x)
print("Monday")
# print("Tuesday")
# print("Wednesday")
# print("Thursday")
# print("Friday")
print(3 < 8)
print(5 <= 7)
print(5 <= 5)
print(7 <= 5)
print("x" <= "y")
print("z" <= "a")
print(5 < 7)
print(!(5 < 7))
print(FALSE)
print(!(FALSE))
print(TRUE)
print( (5 > 7) | (5 < 7) )
print( (TRUE == FALSE) | (1 <= 0))
print( (5 > 7) & (5 < 7) )
print( (TRUE == FALSE) & (1 <= 0) )
print( (4 < 5) & (9 >= 9) & (1 == TRUE))
tinytex::install_tinytex()
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
nombre<-c("Toy Story 1"; "Toy Story 2"; "Toy Story 3"; "Toy Story 4")
nombre<-c("Toy Story 1", "Toy Story 2", "Toy Story 3", "Toy Story 4")
puntuacion<-c(8,3,7,8,7.7)
porsterior_2000<-c(F,F,T,T)
X<-C(1,-5,15,8,10)
X<-C(1,-5,15,8,10)
X<-c(1,-5,15,8,10)
print(x[1])
print(X[1])
# seleccionar elementos de vector []
print(x[c(1,4)])
# seleccionar elementos de vector []
print(X[c(1,4)])
# seleccionar elementos de vector []
print(X[c(1:4)])
puntuacionbaja=puntuacion<7.5
name[puntuacionbaja]
name[puntuacionbaja]
nOMBRE[puntuacionbaja]
nombre[puntuacionbaja]
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
cd
gd
wd
wd
de()
wd()
getWindowsHandle()
getwd()
setwd(dir = "GitHub")
getwd
getwd()
setwd(dir = "victoria.github.io")
setwd(dir = "victoriaholguinr.github.io")
rmarkdown::render("index.Rmd")
rmarkdown::render_site()
